/*------------------------------------*    $VENDOR
\*------------------------------------*/
/*! normalize.css v4.2.0 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Change the default font family in all browsers (opinionated).
 * 2. Correct the line height in all browsers.
 * 3. Prevent adjustments of font size after orientation changes in IE and iOS.
 */
html {
  font-family: sans-serif;
  /* 1 */
  line-height: 1.15;
  /* 2 */
  -ms-text-size-adjust: 100%;
  /* 3 */
  -webkit-text-size-adjust: 100%;
  /* 3 */ }

/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 * 2. Add the correct display in IE.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
main,
menu,
nav,
section,
summary {
  /* 1 */
  display: block; }

/**
 * Add the correct display in IE 9-.
 */
audio,
canvas,
progress,
video {
  display: inline-block; }

/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Add the correct display in IE 10-.
 * 1. Add the correct display in IE.
 */
template,
[hidden] {
  display: none; }

/* Links
   ========================================================================== */
/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */ }

/**
 * Remove the outline on focused links when they are also active or hovered
 * in all browsers (opinionated).
 */
a:active,
a:hover {
  outline-width: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * 1. Remove the bottom border in Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */ }

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit; }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * Add the correct font style in Android 4.3-.
 */
dfn {
  font-style: italic; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Add the correct background and color in IE 9-.
 */
mark {
  background-color: #ff0;
  color: #000; }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none; }

/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct margin in IE 8.
 */
figure {
  margin: 1em 40px; }

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/* Forms
   ========================================================================== */
/**
 * 1. Change font properties to `inherit` in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font: inherit;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Restore the font weight unset by the previous rule.
 */
optgroup {
  font-weight: bold; }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */ }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Change the border, margin, and padding in all browsers (opinionated).
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * Remove the default vertical scrollbar in IE.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on OS X.
 */
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Correct the text style of placeholders in Chrome, Edge, and Safari.
 */
::-webkit-input-placeholder {
  color: inherit;
  opacity: 0.54; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

ul,
ol {
  padding: 0;
  margin: 0;
  list-style: none; }

*,
*::before,
*::after {
  box-sizing: border-box; }

/*------------------------------------*    $CONFIG
\*------------------------------------*/
/*------------------------------------*    $VARIABLES
\*------------------------------------*/
/*------------------------------------*    $MIXINS
\*------------------------------------*/
/* ============================================
    Media queries
*/
/* ============================================
  Placeholder text
*/
/* ============================================
  Hide text
*/
/* ============================================
  iOS Native vertical scroll
*/
/* ============================================
    Output a rem and px fallback value for the given property
*/
/* ============================================
    Output a `font-size: [x]rem;` declaration for the given px value
*/
/* ============================================
    Font sizes
*/
/*------------------------------------*    $FUNCTIONS
\*------------------------------------*/
/* ============================================
    Strip the unit from the given value and return the value
*/
/* ============================================
    Return an em unit based on the pixel value and context
*/
/*------------------------------------*    $BASE
\*------------------------------------*/
/*------------------------------------*    $BASE DEFAULTS
\*------------------------------------*/
html {
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif;
  -webkit-text-size-adjust: 100%; }

img,
svg {
  vertical-align: top; }

button, input, select, textarea {
  font-family: inherit; }

/*------------------------------------*    $TYPOGRAPHY
\*------------------------------------*/
html {
  font-size: 100%;
  line-height: 1.5625; }

h1, h2, h3, h4, h5, h6 {
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif;
  font-style: inherit;
  font-weight: inherit; }

html {
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif;
  font-style: inherit;
  font-weight: inherit;
  text-transform: inherit; }

blockquote {
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif;
  font-style: italic;
  font-weight: inherit;
  text-transform: inherit; }

h1, .xxl {
  font-size: 38px;
  font-size: 2.375rem; }

h2, .xl {
  font-size: 30px;
  font-size: 1.875rem; }

h3, .l {
  font-size: 24px;
  font-size: 1.5rem; }

h4, .m {
  font-size: 18px;
  font-size: 1.125rem; }

h5, .s {
  font-size: 14px;
  font-size: 0.875rem; }

h6, .xs {
  font-size: 12px;
  font-size: 0.75rem; }

/*------------------------------------*    $COMPONENTS
\*------------------------------------*/
/*------------------------------------*    $SITE HEADER
\*------------------------------------*/
.site-header {
  background-color: #e9f2f9; }
  .site-header__inner {
    display: flex;
    justify-content: space-between;
    width: 100%;
    padding: 20px 5%;
    margin: 0 auto; }
  .site-header__navigation {
    -ms-grid-row-align: center;
        align-self: center;
    padding-left: 50px; }
    .site-header__navigation-item {
      display: inline-block;
      min-width: 100px; }
      .site-header__navigation-item > a {
        display: block;
        padding: 1px 10px;
        color: #46484a;
        text-decoration: none; }

/*------------------------------------*    $SITE BODY
\*------------------------------------*/
.site-body {
  padding: 0 5%; }
  .site-body__strapline {
    font-size: 24px;
    font-size: 1.5rem;
    max-width: 700px;
    margin: 60px auto;
    text-align: center; }
  .site-body__grid {
    display: -ms-grid;
    display: grid;
    grid-gap: 20px; }
    @media only screen and (min-width: 800px) {
      .site-body__grid {
        -ms-grid-columns: (minmax(400px, 1fr))[auto-fit];
            grid-template-columns: repeat(auto-fit, minmax(400px, 1fr)); } }
    .site-body__grid > li {
      padding: 20px;
      min-height: 250px;
      background-size: cover;
      background-position: center; }

/*------------------------------------*    $SITE FOOTER
\*------------------------------------*/
.site-footer {
  min-height: 200px;
  margin-top: 60px;
  padding: 20px 5%;
  background-color: #E9F2F9; }

/*------------------------------------*    $BUTTON
\*------------------------------------*/
.button {
  padding: 10px 20px;
  border: 0; }

/*------------------------------------*    $PAGES
\*------------------------------------*/
/*------------------------------------*    $EXAMPLE PAGE
\*------------------------------------*/
.example-page {
  padding: 0 30px 30px; }
  .example-page p {
    margin: 0 0 10px; }
  @media only screen and (min-width: 900px) {
    .example-page__wrapper {
      display: flex;
      flex-wrap: wrap;
      justify-content: space-between; } }
  .example-page__block {
    padding: 20px;
    margin-bottom: 30px;
    background-color: #eee; }
    @media only screen and (min-width: 900px) {
      .example-page__block {
        width: calc(1/2*100% - (1 - 1/2)*30px); } }

body {
  font-family: 'Roboto', sans-serif;
  font-size: 14px;
  color: #333333; }

@media only screen and (min-width: 900px) {
  .sidebar {
    position: fixed;
    height: 100%;
    width: 180px;
    background-color: #333333; } }

@media only screen and (min-width: 900px) {
  .main {
    margin-left: 180px; } }

.wagtail-field {
  min-height: 200px; }

.section-wrapper {
  position: relative; }
  .section-wrapper .section-header {
    position: -webkit-sticky;
    position: sticky;
    top: 0;
    z-index: 9; }

.section-header {
  background-color: #fcf2f2;
  box-shadow: 0px 3px 2px -2px rgba(0, 0, 0, 0.1);
  height: 40px;
  border-left: 40px solid #F37E77;
  font-size: 13px;
  font-weight: 600;
  padding: 0 0 0 15px; }
  .section-header .title {
    line-height: 40px;
    display: inline-block; }

.streamfield-wrapper {
  background-color: #F6F6F6; }

.streamfield {
  padding: 20px 10px 20px;
  position: relative; }
  .streamfield.nested {
    padding: 0; }
  @media only screen and (min-width: 900px) {
    .streamfield {
      padding: 40px 40px 40px; } }

.streamfield-block-wrapper {
  position: relative; }
  .streamfield-block-wrapper .streamfield-menu {
    display: none; }

.streamfield-block {
  transition: all 0.2s ease;
  position: relative;
  border-radius: 3px;
  border: 1px solid #E0E0E0;
  min-height: 50px;
  padding: 30px 10px 30px 50px;
  margin-bottom: 5px;
  background-color: #ffffff; }
  .streamfield-block.collapsed {
    height: 60px;
    overflow: hidden; }
    .streamfield-block.collapsed .streamfield-block-content {
      display: none; }
    .streamfield-block.collapsed .abstract {
      display: block; }
    .streamfield-block.collapsed .help {
      display: none; }
  .streamfield-block.active {
    border: 1px solid #bbbbbb;
    box-shadow: 3px 2px 3px -1px rgba(0, 0, 0, 0.1); }
    .streamfield-block.active .type-icon {
      background-color: #F6F6F6; }
      .streamfield-block.active .type-icon svg {
        fill: #333333; }
    .streamfield-block.active .actions {
      opacity: 1; }
    .streamfield-block.active .help {
      opacity: 1; }
    .streamfield-block.active .richtext {
      display: block; }
  .streamfield-block:hover .type-icon {
    background-color: #F6F6F6; }
    .streamfield-block:hover .type-icon svg {
      fill: #333333; }
  .streamfield-block:hover .actions {
    opacity: 1; }
  .streamfield-block:hover .nested .type-icon {
    background-color: #ffffff; }
    .streamfield-block:hover .nested .type-icon svg {
      fill: #bbbbbb; }
  .streamfield-block:hover .nested .actions {
    opacity: 0; }
  .streamfield-block:hover .nested .help {
    opacity: 0; }
  .nested .streamfield-block:hover .type-icon {
    background-color: #F6F6F6; }
    .nested .streamfield-block:hover .type-icon svg {
      fill: #333333; }
  .nested .streamfield-block:hover .actions {
    opacity: 1; }
  .nested .streamfield-block:hover .help {
    opacity: 1; }
  .nested .streamfield-block .nested-nested .type-icon {
    background-color: #ffffff; }
    .nested .streamfield-block .nested-nested .type-icon svg {
      fill: #bbbbbb; }
  .nested .streamfield-block .nested-nested .actions {
    opacity: 0; }
  .nested .streamfield-block .nested-nested .help {
    opacity: 0; }
  .nested-nested .streamfield-block:hover .type-icon {
    background-color: #F6F6F6; }
    .nested-nested .streamfield-block:hover .type-icon svg {
      fill: #333333; }
  .nested-nested .streamfield-block:hover .actions {
    opacity: 1; }
  .nested-nested .streamfield-block:hover .help {
    opacity: 1; }
  @media only screen and (min-width: 900px) {
    .streamfield-block {
      padding: 30px 20px 30px 60px; }
      .streamfield-block.sb-heading {
        padding: 5px 0 5px 60px; }
      .streamfield-block.sb-image {
        padding: 15px 0 15px 60px; } }

.add {
  display: block;
  height: 36px;
  text-align: center;
  position: relative;
  margin: 0 0 5px;
  border-radius: 3px;
  z-index: 3; }
  .add svg {
    transition: all 0.2s ease;
    width: 14px;
    height: 14px;
    fill: #14B1AF;
    position: absolute;
    top: 10px;
    left: calc(50% - 7px);
    opacity: 1; }
  .add span {
    transition: all 0.2s ease;
    font-size: 11px;
    color: #14B1AF;
    text-transform: uppercase;
    margin: 0 0 0 0;
    position: absolute;
    top: 9px;
    left: 50%;
    opacity: 0;
    font-weight: 600;
    display: none; }
  .add.hidden {
    display: none; }
  @media only screen and (min-width: 900px) {
    .add svg {
      left: 12px;
      fill: #E0E0E0; }
    .add span {
      left: 60px;
      display: block; }
    .add.guttered {
      position: absolute;
      width: 40px;
      left: -40px;
      top: auto;
      bottom: -27px; }
      .add.guttered span {
        display: none; }
      .add.guttered svg {
        left: 25px; }
      .add.guttered:hover {
        background-color: transparent; } }
  .add:hover span {
    opacity: 1; }
  .add:hover svg {
    opacity: 1;
    fill: #14B1AF; }

.type-icon {
  transition: all 0.2s ease;
  position: absolute;
  width: 40px;
  height: 100%;
  left: 0;
  top: 0; }
  .type-icon:hover {
    cursor: -webkit-grab;
    cursor: grab; }
  .type-icon svg {
    transition: all 0.2s ease;
    width: 20px;
    height: 20px;
    left: 10px;
    position: relative;
    top: 19px;
    fill: #bbbbbb; }

.type-name {
  position: absolute;
  right: 10px;
  top: 10px;
  text-transform: uppercase;
  color: #6F6F6F;
  font-size: 10px; }

.actions {
  transition: all 0.2s ease;
  position: absolute;
  width: 100px;
  top: 5px;
  right: 10px;
  opacity: 1; }
  .actions:hover {
    cursor: pointer; }
  .actions img {
    display: block;
    width: 100%; }
  @media only screen and (min-width: 900px) {
    .actions {
      opacity: 0;
      top: 25px; } }

.richtext {
  transition: all 0.2s ease;
  margin: 0 0 5px 0;
  display: none; }

a {
  transition: all 0.2s ease;
  outline: none;
  text-decoration: none; }
  a:hover {
    color: #246060; }

input, textarea {
  border: 1px solid #E0E0E0;
  border-radius: 3px;
  padding: 10px;
  outline: none;
  width: 100%;
  background-color: #ffffff;
  font-family: 'Bitter', serif;
  max-width: 900px; }
  input.heading, textarea.heading {
    border: none;
    font-family: 'Bitter', serif;
    font-size: 22px;
    padding-left: 0;
    background-color: #ffffff; }
  input.text, textarea.text {
    border: none;
    font-family: 'Bitter', serif;
    font-size: 16px;
    padding-left: 0;
    background-color: #ffffff; }

@media only screen and (min-width: 900px) {
  .streamfield-block-content {
    width: calc(100% - 130px); } }

.image img {
  display: inline-block;
  margin: 0 20px 0 0;
  width: 80px;
  height: 80px; }

.image .image-text {
  padding: 15px 0 0 0;
  display: inline-block; }
  .image .image-text p {
    font-weight: 600;
    margin: 0 0 5px 0; }

.label {
  font-weight: 600; }

.small-actions a {
  font-size: 11px;
  color: #14B1AF;
  text-transform: uppercase;
  margin: 0 15px 0 0; }
  .small-actions a:hover {
    color: #246060; }

p {
  margin: 0; }

.label-wrapper {
  position: relative; }
  .label-wrapper label {
    display: inline-block; }
  .label-wrapper .field-help {
    display: inline-block; }

label {
  font-size: 13px;
  display: block;
  margin: 0 0 5px 0;
  color: #6F6F6F; }
  label.big-label {
    font-weight: 600;
    margin: 25px 0 25px 0;
    font-size: 13px; }

.streamfield-nested-heading {
  overflow: hidden;
  height: 60px; }
  .streamfield-nested-heading label {
    font-weight: 600; }
  .streamfield-nested-heading .collapse {
    margin: 0 0 0;
    float: right; }
    .streamfield-nested-heading .collapse .btn {
      padding: 5px 7px;
      height: 30px;
      background-color: #ffffff;
      border-radius: 0;
      font-weight: 400;
      font-size: 10px; }
      .streamfield-nested-heading .collapse .btn svg {
        top: 0; }
    @media only screen and (min-width: 900px) {
      .streamfield-nested-heading .collapse {
        margin: -25px 0 0; } }
  @media only screen and (min-width: 900px) {
    .streamfield-nested-heading {
      height: 40px; } }

.field-group {
  max-width: 300px;
  margin: 0 0 20px;
  position: relative; }
  .field-group input {
    width: 100%; }
  .field-group:hover .field-help {
    opacity: 1; }

.field-group-textarea {
  margin: 0 0 20px;
  position: relative; }
  .field-group-textarea textarea {
    font-size: 22px;
    border: 1px solid #E0E0E0;
    padding-left: 10px;
    padding-right: 10px; }
  .field-group-textarea:hover .field-help {
    opacity: 1; }

.field-group-short {
  width: 200px;
  margin: 0 0 20px;
  display: inline-block; }
  .field-group-short input {
    width: 100%; }
  .field-group-short:hover .field-help {
    opacity: 1; }

.field-help {
  transition: all 0.2s ease;
  opacity: 0; }
  .field-help svg {
    transition: all 0.2s ease;
    width: 16px;
    height: 16px;
    position: relative;
    top: 4px;
    margin-left: 2px;
    fill: #14B1AF; }
  .field-help .tooltip {
    position: absolute;
    width: 250px;
    height: auto;
    border-radius: 3px;
    background-color: #333333;
    padding: 15px;
    color: #ffffff;
    font-size: 13px;
    display: none;
    box-shadow: 3px 2px 3px -1px rgba(0, 0, 0, 0.1);
    bottom: 35px;
    border: 1px solid #E0E0E0;
    z-index: 10; }
  .field-help:hover {
    cursor: pointer; }
    .field-help:hover svg {
      fill: #333333; }
    .field-help:hover .tooltip {
      display: block; }

.btn {
  display: inline-block;
  padding: 10px;
  background-color: #14B1AF;
  border-radius: 3px;
  color: #ffffff;
  text-transform: uppercase;
  font-size: 11px;
  font-weight: 600;
  height: 40px; }
  .btn.btn-with-icon {
    padding: 0;
    border: 1px solid #14B1AF; }
    .btn.btn-with-icon .btn-icon {
      padding: 0 10px;
      display: inline-block; }
      .btn.btn-with-icon .btn-icon svg {
        fill: #ffffff;
        width: 18px;
        height: 18px;
        position: relative; }
    .btn.btn-with-icon .btn-text {
      transition: all 0.2s ease;
      background-color: #ffffff;
      color: #14B1AF;
      display: inline-block;
      line-height: 38px;
      padding: 0 10px; }
  .btn:hover {
    background-color: #246060;
    color: #ffffff; }
    .btn:hover.btn-with-icon {
      border: 1px solid #246060; }
      .btn:hover.btn-with-icon .btn-text {
        color: #246060; }

.collapse {
  text-align: right;
  margin: 0 10px 20px 0;
  float: right; }
  .collapse .btn {
    background-color: transparent;
    color: #6F6F6F;
    padding-top: 11px; }
    .collapse .btn svg {
      transition: all 0.2s ease;
      height: 16px;
      width: 16px;
      position: relative;
      top: 2px;
      stroke: #bbbbbb; }
    .collapse .btn:hover {
      color: #333333; }
      .collapse .btn:hover svg {
        stroke: #333333; }
  @media only screen and (min-width: 900px) {
    .collapse {
      margin: 0 40px 20px 0; } }

.help {
  transition: all 0.2s ease;
  position: absolute;
  background-color: #ffffff;
  top: -22px;
  width: auto;
  height: 20px;
  right: 0;
  font-size: 11px;
  opacity: 0;
  text-align: right;
  color: #14B1AF;
  display: none; }
  .help svg {
    width: 15px;
    height: 15px;
    position: relative;
    top: 2px;
    margin-right: 2px;
    fill: #14B1AF; }

.abstract {
  display: none;
  position: absolute;
  left: 60px;
  top: 18px;
  color: #333333;
  width: calc(100% - 180px); }
  @media only screen and (min-width: 900px) {
    .abstract {
      width: auto; } }

.streamfield-menu {
  border-radius: 3px;
  margin: 4px 0;
  padding: 40px 0 20px;
  text-align: center;
  position: relative;
  z-index: 3; }
  .streamfield-menu.active {
    display: block; }
  .streamfield-menu .menu-title {
    margin: 0 0 20px;
    font-size: 18px;
    display: none; }
  .streamfield-menu .close {
    transition: all 0.2s ease;
    width: 17px;
    height: 17px;
    position: absolute;
    top: 10px;
    left: calc(50% - 8px);
    fill: #E0E0E0; }
    .streamfield-menu .close:hover {
      cursor: pointer;
      fill: #14B1AF; }
    @media only screen and (min-width: 900px) {
      .streamfield-menu .close {
        left: 11px; } }
  .streamfield-menu .btn-with-icon {
    border: none;
    background-color: rgba(224, 224, 224, 0.4);
    margin: 2px 0;
    width: 90px;
    height: auto;
    min-height: 110px;
    vertical-align: top; }
    .streamfield-menu .btn-with-icon .btn-icon {
      background-color: transparent;
      vertical-align: top;
      display: block;
      height: 50px;
      text-align: center; }
      .streamfield-menu .btn-with-icon .btn-icon svg {
        transition: all 0.2s ease;
        position: relative;
        top: 20px;
        width: 28px;
        height: 28px;
        opacity: 0.7;
        fill: #333333; }
    .streamfield-menu .btn-with-icon .btn-text {
      transition: all 0.2s ease;
      background-color: transparent;
      color: #333333;
      padding: 10px;
      display: block;
      text-align: center;
      text-transform: none;
      font-weight: 400;
      line-height: 15px; }
    .streamfield-menu .btn-with-icon:hover {
      background-color: #14B1AF;
      border: none; }
      .streamfield-menu .btn-with-icon:hover .btn-icon svg {
        opacity: 1;
        fill: #ffffff; }
      .streamfield-menu .btn-with-icon:hover .btn-text {
        color: #ffffff; }
  @media only screen and (min-width: 900px) {
    .streamfield-menu {
      padding: 40px 60px 40px;
      text-align: left; }
      .nested .streamfield-menu {
        padding: 40px 0 40px; } }

.clove-header {
  background-color: #011f5b;
  height: 90px;
  padding: 0 60px 0 40px; }
  .clove-header .logo {
    display: inline-block;
    height: 90px;
    padding: 22px 0; }

.clove-nav {
  float: right;
  height: 90px; }
  .clove-nav li {
    display: inline-block;
    margin-left: 50px; }
  .clove-nav a {
    transition: .25s ease;
    display: block;
    height: 90px;
    display: flex;
    align-items: center;
    color: #DDE0ED;
    text-transform: uppercase;
    font-weight: 500;
    font-size: 13px;
    letter-spacing: 0.08em;
    position: relative; }
    .clove-nav a:after {
      content: "";
      position: absolute;
      left: 0;
      bottom: 0;
      width: 100%;
      height: 4px;
      transform: scale(0);
      background: #FF6767;
      transition: transform .25s ease; }
    .clove-nav a:hover {
      color: #ffffff; }
      .clove-nav a:hover:after {
        transform: scale(1); }
    .clove-nav a.active {
      color: #ffffff; }
      .clove-nav a.active:after {
        transform: scale(1); }

@media only screen and (min-width: 900px) {
  .clove-sidebar {
    position: fixed;
    height: 100%;
    width: 240px;
    background-color: #ffffff;
    border-right: 1px solid #DDE0ED;
    overflow: scroll;
    padding: 40px 0 100px 0; } }

.sidebar-group {
  margin: 0 0 40px 0; }

.sidebar-heading {
  display: block;
  font-family: 'Gentium Basic', serif;
  font-weight: 700;
  font-size: 22px;
  color: #011f5b;
  margin: 0 0 10px 40px;
  letter-spacing: -0.01em; }

.sidebar-group-nav li {
  display: block; }

.sidebar-group-nav a {
  transition: .25s ease;
  display: block;
  height: 30px;
  padding: 0 0 0 40px;
  display: flex;
  align-items: center;
  color: #011f5b;
  font-weight: 400;
  font-size: 13px;
  position: relative;
  background: #ffffff; }
  .sidebar-group-nav a:after {
    content: "";
    position: absolute;
    left: 0;
    top: 0;
    width: 4px;
    height: 100%;
    transform: scale(0);
    background: #FF6767;
    transition: transform .25s ease; }
  .sidebar-group-nav a:hover {
    color: #FF6767;
    background: #F2F4FA; }
    .sidebar-group-nav a:hover:after {
      transform: scale(1); }
  .sidebar-group-nav a.active {
    color: #FF6767;
    background: #F2F4FA; }
    .sidebar-group-nav a.active:after {
      transform: scale(1); }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
